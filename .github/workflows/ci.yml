# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: mailpit-api-client ci

on:
  push:
    branches: [ "main", "ci" ]
  pull_request:
    branches: [ "main", "ci" ]

permissions:
  contents: read

jobs:
  black:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11", "3.12-rc"]
        debian_codename: ["buster", "bullseye"]
    container:
      image: ghcr.io/corvan/black:${{ matrix.python_version }}-${{ matrix.debian_codename }}
      credentials:
        username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - name: black
      run: |
        black $GITHUB_WORKSPACE/mailpit

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [ "3.9", "3.10", "3.11", "3.12-rc" ]
        debian_codename: [ "buster", "bullseye" ]
    container:
      image: ghcr.io/corvan/lint:${{ matrix.python_version }}-${{ matrix.debian_codename }}
      credentials:
        username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: lint
        run: |
          ruff check $GITHUB_WORKSPACE/mailpit

  mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [ "3.9", "3.10", "3.11", "3.12-rc" ]
        debian_codename: [ "buster", "bullseye" ]
    container:
      image: ghcr.io/corvan/mypy:${{ matrix.python_version }}-${{ matrix.debian_codename }}
      credentials:
        username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: mypy
        env:
          PYTHONPATH: /usr/lib/python3/dist-packages
        run: |
           python3 -m mypy --ignore-missing-imports $GITHUB_WORKSPACE/mailpit

  unittest:
    needs: ["black", "lint", "mypy"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [ "3.9", "3.10", "3.11", "3.12-rc" ]
        debian_codename: [ "buster", "bullseye" ]
    container:
      image: ghcr.io/corvan/unittest:${{ matrix.python_version }}-${{ matrix.debian_codename }}
      credentials:
        username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: unittest
        run: |
          export PYTHONPATH=$GITHUB_WORKSPACE
          pytest --showlocals --exitfirst --log-level=DEBUG -vv tests/unit

  integration:
    needs: [unittest]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [ "3.9", "3.10", "3.11", "3.12-rc" ]
        debian_codename: [ "buster", "bullseye" ]
    container:
      image: ghcr.io/corvan/unittest:${{ matrix.python_version }}-${{ matrix.debian_codename }}
      credentials:
        username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
    services:
      mailpit:
        image: axllent/mailpit:latest
        ports:
          - 8025:8025
          - 1025:1025
    steps:
      - uses: actions/checkout@v3
      - name: unittest
        run: |
          export PYTHONPATH=$GITHUB_WORKSPACE
          pytest --showlocals --exitfirst --log-level=DEBUG -vvs tests/integration
